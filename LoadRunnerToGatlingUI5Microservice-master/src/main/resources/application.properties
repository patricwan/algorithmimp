# Gives us access to the H2 database web console
spring.h2.console.enabled=true
# Generates the database *only* if it's not there yet  drop-and-create-tables  update
spring.jpa.hibernate.ddl-auto=update
# Creates the database in a file
spring.datasource.url=jdbc:mysql://localhost:3306/ui5microservices

spring.datasource.username=root
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5

# For educational purposes we will show the SQL in console
spring.jpa.properties.hibernate.show_sql=true

server.port=9090

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

logging.level.com.sap.micro.service.ui5.scenario=INFO
logging.level.com.sap=INFO


logging.file=output.log

spring.http.multipart.max-file-size=56MB
spring.http.multipart.max-request-size=56MB

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
file.upload-dir=C:/temp